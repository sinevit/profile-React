{"version":3,"file":"static/js/772.03f8b68d.chunk.js","mappings":"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","sources":["webpack://profile/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://profile/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://profile/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__+4u2F\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ucbsg\"};","import classes from './Post.module.css'\r\n\r\nexport const Post = (props) => {\r\n    return(\r\n      <div className={classes.item}>\r\n      <img src=\"https://e7.pngegg.com/pngimages/749/802/png-clipart-shadow-fight-ninja-berdychiv-kusarigama-illya-shadow-fight-2-avatar-city-cartoon.png\" alt=\"avatar\" />\r\n      { props.message }\r\n      <div>\r\n        <span>like</span>\r\n        <span>{ props.like }</span>\r\n      </div>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport { Post } from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validate';\r\n\r\nexport const MyPosts = (props) => {\r\n    const addPost = (values) => {\r\n        props.addPosts(values.post);\r\n    }\r\n\r\n    return(\r\n      <div className={classes.postsBlock}>\r\n        <h1>my posts </h1>\r\n        <PostsReduxForm onSubmit={addPost}/>\r\n        <div>\r\n          {[...props.posts].reverse().map( post => <Post like={post.like} message={post.message} key={post.id}/>)}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea}  \r\n                    name={'post'}\r\n                    validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n           <button>Add post</button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst PostsReduxForm = reduxForm({\r\n    form: 'posts'\r\n})(PostForm)","import { connect } from 'react-redux';\r\nimport { MyPosts } from './MyPosts';\r\nimport { addPosts } from '../../../redux/profile-reducer'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPosts})(MyPosts)","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileInfo_description__9cgdk\",\"content__ava\":\"ProfileInfo_content__ava__6xlJI\",\"image\":\"ProfileInfo_image__MZu61\"};","// import classes from './ProfileInfo.module.css'\r\n\r\nimport React, { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\n\r\nexport const ProfileStatus = (props) => {\r\n\r\n  const [status, setStatus] = useState(false)\r\n  const [statusValue, setStatusValue] = useState(props.status)\r\n\r\n  useEffect( () => {\r\n    setStatusValue(props.status)\r\n  },[props.status])\r\n\r\n  const changeStatus = (e) => {\r\n    setStatusValue(e.currentTarget.value)\r\n  }\r\n\r\n  const deactivate = () =>{\r\n    setStatus(false); \r\n    props.updateStatus(statusValue)\r\n  }\r\n\r\n  const activate = () =>{\r\n    setStatus(true); \r\n  }\r\n\r\n\r\n    return(\r\n      <div>\r\n        {!status && <div>\r\n            <span onDoubleClick={activate}>{props.status}</span>\r\n        </div>}\r\n        {status && <div>\r\n            <input onChange={changeStatus} autoFocus={true} onBlur={deactivate} value={statusValue}/>\r\n        </div>}\r\n      </div>\r\n    )\r\n}","\r\nimport { Preloader } from '../../common/Preloader/Preloader'\r\nimport classes from './ProfileInfo.module.css'\r\nimport { ProfileStatus } from './ProfileStatus/ProfileStatus'\r\n\r\nexport const ProfileInfo = ({profile, status, updateStatus }) => {\r\n    if(!profile){\r\n      return <Preloader />\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        {/* <div>\r\n          <img className={classes.image} src='https://travelclub.kz/storage/tours/August2022/PPotdGnApSOgAdMnveS0.jpg' alt='japan' ></img>\r\n        </div> */}\r\n        <div className={classes.description}>\r\n          <img src={profile.photos.large} alt='samuray'></img>\r\n          <ProfileStatus status={status}  updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    )\r\n}","import { MyPostsContainer } from './MyPosts/MyPostsContainer'\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo'\r\n\r\nexport const Profile = ({profile, status, updateStatus }) => {\r\n    return(\r\n      <div>\r\n        <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\r\n        <MyPostsContainer />\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {getUserID, updateStatus, getStatus} from '../../redux/profile-reducer'\r\nimport { Profile } from \"./Profile\"\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        let profileId = this.props.router.params.userId ?  this.props.router.params.userId.substring(1) : 2;\r\n        this.props.getUserID(profileId)\r\n        this.props.getStatus(profileId)\r\n    }\r\n\r\n    render(){\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserID, updateStatus, getStatus}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer)\r\n","import { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect =(state) => {\r\n    return {\r\n      isAuth : state.auth.isAuth,\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    const RedirectComponent = (props) => {\r\n                if(!props.isAuth) return <Navigate to={'/login'}/>\r\n                return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}"],"names":["Post","props","_jsxs","className","classes","children","_jsx","src","alt","message","like","maxLength10","maxLengthCreator","PostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","posts","profilePage","newPostText","addPosts","values","post","_toConsumableArray","reverse","map","id","ProfileStatus","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","statusValue","setStatusValue","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","photos","large","Preloader","Profile","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","profileId","this","router","params","userId","substring","getUserID","getStatus","_objectSpread","React","compose","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","isAuth","auth","Navigate","to"],"sourceRoot":""}