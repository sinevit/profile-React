{"version":3,"file":"static/js/192.a9f58ca6.chunk.js","mappings":"iNACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,SCEnKA,EAAa,SAACC,GACzB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,KAAe,IAAMA,EAAAA,OAAeC,UACpDH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAI,WAAaN,EAAMO,GAAGH,SAAEJ,EAAMQ,QAG/C,ECPaC,EAAU,SAACT,GACtB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAgBC,SAAEJ,EAAMU,MAE5C,E,wCCuBMC,GAAcC,EAAAA,EAAAA,GAAiB,IAgB/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,eAAlBD,EAdL,SAACd,GACjB,OACIgB,EAAAA,EAAAA,MAAA,QAAMC,SAAUjB,EAAMkB,aAAad,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUb,KAAM,iBAC9Bc,YAAY,qBACZC,SAAU,CAACC,EAAAA,EAAUb,QAE7BV,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,UAAAG,SAAS,aAGzB,I,UC5BA,GAAeqB,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KARmB,SAACC,GACpB,MAAO,CACLC,YAAaD,EAAMC,YAEvB,GAI2B,CAAEC,YAAAA,EAAAA,IAC3BC,EAAAA,EAFF,EDLuB,SAAC9B,GAKpB,OAAKA,EAAM+B,QAGPf,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAAA,QAAgBC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAqBC,SAChCJ,EAAM4B,YAAYI,QAAQC,KAAI,SAAAC,GAAM,OAAIjC,EAAAA,EAAAA,KAACF,EAAU,CAACS,KAAM0B,EAAO1B,MAAW0B,EAAO3B,GAAM,OAE9FS,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAAA,SAAiBC,SAAA,CAC5BJ,EAAM4B,YAAYO,SAASF,KAAI,SAAAG,GAAC,OAAInC,EAAAA,EAAAA,KAACQ,EAAO,CAACC,KAAM0B,EAAEC,SAAcD,EAAE7B,GAAM,KAC5EN,EAAAA,EAAAA,KAACY,EAAgB,CAACI,SAZX,SAACqB,GAChBtC,EAAM6B,YAAYS,EAAOC,eAC7B,WAC0BtC,EAAAA,EAAAA,KAACuC,EAAAA,GAAQ,CAAClC,GAAI,UAa5C,G,kGEzBImC,EAA4B,SAACd,GAC7B,MAAO,CACLI,OAASJ,EAAMe,KAAKX,OAExB,EAEWD,EAAmB,SAACa,GAO7B,OADiCjB,EAAAA,EAAAA,IAAQe,EAARf,EALP,SAAC1B,GACf,OAAIA,EAAM+B,QACH9B,EAAAA,EAAAA,KAAC0C,GAASC,EAAAA,EAAAA,GAAA,GAAK5C,KADGC,EAAAA,EAAAA,KAACuC,EAAAA,GAAQ,CAAClC,GAAI,UAEnD,GAIJ,C","sources":["webpack://profile/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem.jsx/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__uDuk0\",\"dialogsItems\":\"Dialogs_dialogsItems__HV1bE\",\"active\":\"Dialogs_active__fxVLw\",\"messages\":\"Dialogs_messages__4TE2B\",\"message\":\"Dialogs_message__3LLR+\"};","import { NavLink } from 'react-router-dom'\r\nimport classes from '../Dialogs.module.css'\r\n\r\nexport const DialogItem = (props) =>{\r\n  return(\r\n    <div className={classes.item + ' ' + classes.active}>\r\n    <NavLink to={`dialogs/` + props.id}>{props.name}</NavLink>\r\n  </div>\r\n  )\r\n}\r\n","import classes from '../Dialogs.module.css'\r\n\r\nexport const Message = (props) =>{\r\n  return(\r\n    <div className={classes.message}>{props.text}</div>\r\n  )\r\n}","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { DialogItem } from './DialogItem.jsx/DialogItem'\r\nimport classes from './Dialogs.module.css'\r\nimport { Message } from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/Preloader/FormsControls/FormControls';\r\nimport { maxLengthCreator, required } from '../../utils/validate';\r\n\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n    const addMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n    if (!props.isAuth) return <Navigate to={'/login'} />\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} />)}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {props.dialogsPage.messages.map(t => <Message text={t.message} key={t.id} />)}\r\n                <MessageFormRedux onSubmit={addMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageText'}\r\n                    placeholder='Enter your message' \r\n                    validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button >Send</button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nconst MessageFormRedux = reduxForm({ form: 'messageForm' })(MessageForm)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { Dialogs } from './Dialogs';\r\nimport { sendMessage } from '../../redux/dialogs-reducer'\r\n\r\n\r\nlet mapStateToProps =(state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { sendMessage }),\r\n  withAuthRedirect)\r\n  (Dialogs)","import { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect =(state) => {\r\n    return {\r\n      isAuth : state.auth.isAuth,\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    const RedirectComponent = (props) => {\r\n                if(!props.isAuth) return <Navigate to={'/login'}/>\r\n                return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}"],"names":["DialogItem","props","_jsx","className","classes","children","NavLink","to","id","name","Message","text","maxLength10","maxLengthCreator","MessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","compose","connect","state","dialogsPage","sendMessage","withAuthRedirect","isAuth","dialogs","map","dialog","messages","t","message","values","newMessageText","Navigate","mapStateToPropsForRedirect","auth","Component","_objectSpread"],"sourceRoot":""}