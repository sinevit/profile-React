{"version":3,"file":"static/js/771.56134ba1.chunk.js","mappings":"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","sources":["webpack://profile/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://profile/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://profile/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__+4u2F\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ucbsg\"};","import classes from './Post.module.css'\r\n\r\nexport const Post = (props) => {\r\n    return(\r\n      <div className={classes.item}>\r\n      <img src=\"https://e7.pngegg.com/pngimages/749/802/png-clipart-shadow-fight-ninja-berdychiv-kusarigama-illya-shadow-fight-2-avatar-city-cartoon.png\" alt=\"avatar\" />\r\n      { props.message }\r\n      <div>\r\n        <span>like</span>\r\n        <span>{ props.like }</span>\r\n      </div>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport { Post } from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validate';\r\n\r\nexport const MyPosts = (props) => {\r\n    const addPost = (values) => {\r\n        props.addPosts(values.post);\r\n    }\r\n\r\n    return(\r\n      <div className={classes.postsBlock}>\r\n        <h1>my posts </h1>\r\n        <PostsReduxForm onSubmit={addPost}/>\r\n        <div>\r\n          {[...props.posts].reverse().map( post => <Post like={post.like} message={post.message} key={post.id}/>)}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea}  \r\n                    name={'post'}\r\n                    validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n           <button>Add post</button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst PostsReduxForm = reduxForm({\r\n    form: 'posts'\r\n})(PostForm)","import { connect } from 'react-redux';\r\nimport { MyPosts } from './MyPosts';\r\nimport { addPosts } from '../../../redux/profile-reducer'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPosts})(MyPosts)","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileInfo_description__9cgdk\",\"content__ava\":\"ProfileInfo_content__ava__6xlJI\",\"image\":\"ProfileInfo_image__MZu61\",\"mainPhoto\":\"ProfileInfo_mainPhoto__Apii-\",\"contact\":\"ProfileInfo_contact__VUG5+\",\"error\":\"ProfileInfo_error__n2J08\"};","// import classes from './ProfileInfo.module.css'\r\n\r\nimport React, { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\n\r\nexport const ProfileStatus = (props) => {\r\n\r\n  const [status, setStatus] = useState(false)\r\n  const [statusValue, setStatusValue] = useState(props.status)\r\n\r\n  useEffect( () => {\r\n    setStatusValue(props.status)\r\n  },[props.status])\r\n\r\n  const changeStatus = (e) => {\r\n    setStatusValue(e.currentTarget.value)\r\n  }\r\n\r\n  const deactivate = () =>{\r\n    setStatus(false); \r\n    props.updateStatus(statusValue)\r\n  }\r\n\r\n  const activate = () =>{\r\n    setStatus(true); \r\n  }\r\n\r\n\r\n    return(\r\n      <div>\r\n        {!status && <div>\r\n          <b>Status</b>: <span onDoubleClick={activate}>{props.status}</span>\r\n        </div>}\r\n        {status && <div>\r\n            <input onChange={changeStatus} autoFocus={true} onBlur={deactivate} value={statusValue}/>\r\n        </div>}\r\n      </div>\r\n    )\r\n}","import { ProfileStatus } from \"./ProfileStatus/ProfileStatus\"\r\nimport classes from './ProfileInfo.module.css'\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { Input, Textarea } from \"../../common/FormsControls/FormControls\"\r\n\r\nexport const ProfileDataForm = ({ handleSubmit, profile, status, updateStatus, isOwner, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {!isOwner && <div><button > save</button></div>}\r\n            {error && <div className={classes.error}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>: <Field component={Input} name={'fullName'}\r\n                    placeholder={\"full name\"} validate={[]} />\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: <Field component={Input} name={'lookingForAJob'}\r\n                    validate={[]} type={'checkbox'} />\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>:  <Field component={Textarea} name={'lookingForAJobDescription'}\r\n                    placeholder={\"my skills\"} validate={[]} />\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: <Field component={Textarea} name={'aboutMe'} placeholder={\"about me\"}\r\n                    validate={[]} />\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return (<div key={key} className={classes.contact}>\r\n                        <b>{key}</b>: <Field component={Input} name={`contacts.${key}`}\r\n                            placeholder={key} validate={[]} />\r\n                    </div>)\r\n                }\r\n                )}\r\n            </div>\r\n            <ProfileStatus status={status} updateStatus={updateStatus} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ProfileReduxForm = reduxForm({\r\n    form: 'profile'\r\n})(ProfileDataForm)","\r\nimport React from 'react'\r\nimport { Preloader } from '../../common/Preloader/Preloader'\r\nimport classes from './ProfileInfo.module.css'\r\nimport { ProfileStatus } from './ProfileStatus/ProfileStatus'\r\nimport ava from '../../../assets/images/ava.png'\r\nimport { useState } from 'react'\r\nimport { ProfileReduxForm } from './ProfileDataForm'\r\n\r\nexport const ProfileInfo = ({ profile, isOwner, savePhoto, status, updateStatus, saveProfile }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then( () => {\r\n            setEditMode(false)\r\n        }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.description}>\r\n                <img src={profile.photos.large || ava} alt='samuray' className={classes.mainPhoto}></img>\r\n                {!isOwner && <input type={\"file\"} onChange={onPhotoSelected}></input>}\r\n\r\n                {!editMode\r\n                    ? <ProfileData profile={profile} isOwner={isOwner}\r\n                        goToEditMode={() => setEditMode(true)}\r\n                        status={status} updateStatus={updateStatus} />\r\n                    : <ProfileReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode, status, updateStatus }) => {\r\n    return (\r\n        <div>\r\n            {!isOwner && <div><button onClick={goToEditMode}> edit</button></div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'Yes' : 'No'}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>\r\n\r\n                    <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />)}\r\n            </div>\r\n            <ProfileStatus status={status} updateStatus={updateStatus} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={classes.contact}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}","import { MyPostsContainer } from './MyPosts/MyPostsContainer'\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo'\r\n\r\nexport const Profile = ({profile, isOwner, status, updateStatus, savePhoto, saveProfile }) => {\r\n    return(\r\n      <div>\r\n        <ProfileInfo profile={profile} status={status} \r\n        updateStatus={updateStatus} isOwner={isOwner}\r\n        savePhoto={savePhoto} saveProfile={saveProfile}/>\r\n        <MyPostsContainer />\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {getUserID, updateStatus, getStatus, savePhoto, saveProfile} from '../../redux/profile-reducer'\r\nimport { Profile } from \"./Profile\"\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n\r\n} from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshUserProfile(){\r\n        // let profileId = this.props.router.params.userId ?  this.props.router.params.userId.substring(1) : 28718;\r\n        // let profileId = this.props.router.params.userId \r\n        let profileId;\r\n        if(this.props.router.params.userId ){\r\n        profileId = this.props.router.params.userId.substring(1)\r\n        }else{\r\n            profileId = 28831\r\n        }\r\n        this.props.getUserID(profileId)\r\n        this.props.getStatus(profileId)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshUserProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.router.params.userId !== prevProps.router.params.userId)\r\n        this.refreshUserProfile()\r\n    }\r\n\r\n    render(){\r\n        return <Profile {...this.props} profile={this.props.profile} \r\n        status={this.props.status} updateStatus={this.props.updateStatus}\r\n        isOwner={this.props.router.params.userId}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserID, updateStatus, getStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer)\r\n","import { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect =(state) => {\r\n    return {\r\n      isAuth : state.auth.isAuth,\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    const RedirectComponent = (props) => {\r\n                if(!props.isAuth) return <Navigate to={'/login'}/>\r\n                return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}"],"names":["Post","props","_jsxs","className","classes","children","_jsx","src","alt","message","like","maxLength10","maxLengthCreator","PostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","posts","profilePage","newPostText","addPosts","values","post","_toConsumableArray","reverse","map","id","ProfileStatus","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","statusValue","setStatusValue","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileReduxForm","_ref","profile","isOwner","error","Input","placeholder","type","Object","keys","contacts","key","concat","ProfileInfo","savePhoto","saveProfile","editMode","setEditMode","Preloader","photos","large","ava","target","files","length","initialValues","formData","then","ProfileData","goToEditMode","_ref2","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","_ref3","Profile","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","profileId","this","router","params","userId","substring","getUserID","getStatus","refreshUserProfile","prevProps","_objectSpread","React","compose","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","isAuth","auth","Navigate","to"],"sourceRoot":""}